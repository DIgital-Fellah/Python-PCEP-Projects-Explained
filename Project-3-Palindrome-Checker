def is_palindrome(text):
    """
    Checks if a given string is a palindrome.
    
    A palindrome is a string that reads the same backward as forward.
    
    Args:
        text: The string to check.
    
    Returns:
        True if the string is a palindrome, False otherwise.
    """
    
    # Convert the string to lowercase and remove all non-alphanumeric characters.
    # This ensures that the palindrome check is case-insensitive and ignores spaces,
    # punctuation, and other non-alphanumeric characters.
    text = ''.join(char.lower() for char in text if char.isalnum())
    
    # Check if the reversed string is equal to the original string.
    # text[::-1] creates a reversed version of the string.
    # If the reversed string is the same as the original cleaned string,
    # then the string is a palindrome.
    return text == text[::-1]

# Test the function with some example strings
text1 = "racecar"  # This string is a simple palindrome.
text2 = "hello"    # This string is not a palindrome.
text3 = "A man, a plan, a canal: Panama"  # This string is a complex palindrome with spaces and punctuation.

# Print the result of the palindrome check for each example string.
# The f-string format is used to include the string and the result in the output.
print(f"{text1} is a palindrome: {is_palindrome(text1)}")
print(f"{text2} is a palindrome: {is_palindrome(text2)}")
print(f"{text3} is a palindrome: {is_palindrome(text3)}")
